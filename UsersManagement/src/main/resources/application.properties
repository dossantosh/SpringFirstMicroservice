spring.application.name=springfirstmicroservise

spring.config.import=optional:file:.env[.properties]

logging.level.org.springframework.security=DEBUG

# PostgreSQL
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# Log SQL values (e.g., actual parameters, not just ? placeholders)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# JPA/Hibernate
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false

# SQL init
spring.sql.init.data-locations=classpath:data-postgres.sql
spring.sql.init.platform=postgresql
spring.sql.init.mode=always 

# Jwt
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# Server
server.port=${SERVER_PORT}
server.error.whitelabel.enabled=false

# Docker
spring.docker.compose.enabled=false

# HikariCP (pool de conexiones)
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=TRACE
# Define el número mínimo de conexiones inactivas en el pool.
spring.datasource.hikari.minimum-idle=5

# Define el número máximo de conexiones que el pool puede tener abiertas al mismo tiempo
spring.datasource.hikari.maximum-pool-size=100

# Especifica el tiempo en milisegundos que una conexión inactiva puede permanecer en el pool antes de ser eliminada
spring.datasource.hikari.idle-timeout=50000

# Actuator
management.endpoints.web.exposure.include=health,info,metrics,env,beans,loggers,httpexchanges,auditevents,hikari
management.endpoint.hikari.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator

springdoc.show-actuator=true
springdoc.use-management-port=true
springdoc.api-docs.path=/v3/api-docs